diff --git a/doc.md b/doc.md
index 1b2798b..b2c4786 100644
--- a/doc.md
+++ b/doc.md
@@ -2,13 +2,13 @@
 
 Durante lo sviluppo di software, spesso vengono utilizzati strumenti di automazione per eseguire azioni ripetitive e ridurre il carico di lavoro degli sviluppatori. GitHub, piattaforma di sviluppo software basata su Git, mette a disposizione degli strumenti che permettono di automatizzare il flusso di lavoro: le GitHub Actions.
 
-Una GitHub Action è un'automazione basata su eventi, ovvero una serie di comandi che vengono eseguiti quando si verfica un evento specifico. Gli eventi possono essere vari, nel caso in esame il trigger è la creazione di una pull request.
+Una GitHub Action è un'automazione basata su eventi, ovvero una serie di comandi che vengono eseguiti quando si verifica un evento specifico. Gli eventi possono essere vari, nel caso in esame il trigger è la creazione di una pull request.
 
 Le GitHub Actions sfruttano i workflow per definire le automazioni, ossia un file che specifica quali azioni devono essere eseguite in risposta a determinati eventi. I workflow sono definiti attraverso i file YAML (.yml) e posizionati all'interno della directory _.github/workflows_. Quando si verifica l'evento previsto, il workflow viene avviato automaticamente.
 
 ## Test eseguito
 
-È stata crata una repository per poter comprendere e sfruttare le GitHub Actions. L'obbiettivo principale è stato quello di creare un'automazione che mi permettese di ottenere un file di changelog ad ogni aggiornamneto delle pull request. La directory _src/_ contiene del codice di prova utile per poter eseguire i diversi test. 
+È stata creata una repository per poter comprendere e sfruttare le GitHub Actions. L'obbiettivo principale è stato quello di creare un'automazione che mi permettesse di ottenere un file di changelog a ogni aggiornamento delle pull request. La directory _src/_ contiene del codice di prova utile per poter eseguire i diversi test. 
 
 Inizialmente è stato creato il file 'test_action.yml' il cui funzionamento è molto semplice: stampa un messaggio quando ci sono cambiamenti in un qualsiasi file all'interno di _src/_. Questo mi ha permesso di comprendere i principi fondamentali delle GitHub Actions.
 
diff --git a/src/eo_strings.cpp b/src/eo_strings.cpp
index 0453405..471cead 100644
--- a/src/eo_strings.cpp
+++ b/src/eo_strings.cpp
@@ -104,9 +104,9 @@ int main() {
 	cout << "Lista pari modificata: ";
 	categorizer.show(categorizer.getEvenList());
 
-	categorizer.del('s', categorizer.getEvenList());
+	categorizer.del('o', categorizer.getEvenList());
 
-	cout << "Lista pari senza strawberry: ";
+	cout << "Lista pari senza orange: ";
 	categorizer.show(categorizer.getEvenList());
 
 	cout << "Lista delle stringhe dispari: ";
